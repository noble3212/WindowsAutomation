import subprocess
import time
import re
import logging
import win32evtlog  # pywin32 to access Event Logs

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Function to monitor PowerShell activity
def monitor_powershell_activity():
    server = 'localhost'  # Local machine
    log_type = 'Security'  # Security log to monitor PowerShell events
    suspicious_command_pattern = r"([A-Za-z0-9+/=]{20,})"  # Match base64-like patterns
    
    try:
        # Open the event log for PowerShell activity (Security logs for PowerShell event ID)
        log_handle = win32evtlog.OpenEventLog(server, log_type)

        while True:
            # Read events from the log
            events = win32evtlog.ReadEventLog(log_handle, win32evtlog.EVENTLOG_SEQUENTIAL_READ, 0)
            
            if events:
                for event in events:
                    # Check if the event is related to PowerShell execution
                    if "powershell" in event.StringInserts[0].lower():
                        logger.info(f"PowerShell execution detected: {event.StringInserts}")
                        
                        # Check for suspicious base64 patterns in the PowerShell command
                        for insert in event.StringInserts:
                            if re.match(suspicious_command_pattern, insert):
                                logger.warning(f"Suspicious PowerShell command (possible fileless malware): {insert}")
            
            time.sleep(5)  # Check for new events every 5 seconds

    except Exception as e:
        logger.error(f"An error occurred: {e}")


# Function to monitor WMI activity
def monitor_wmi_activity():
    command = 'powershell "Get-WmiObject -Class Win32_Process -Filter \\"Name=\'powershell.exe\' OR Name=\'cmd.exe\'\\""'
    try:
        # Run WMI query for suspicious processes (powershell.exe or cmd.exe)
        logger.info(f"Running WMI query: {command}")
        process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        stdout, stderr = process.communicate()

        if stderr:
            logger.error(f"WMI Query error: {stderr.decode()}")
        else:
            logger.info(f"WMI Query output: {stdout.decode()}")
            # Look for suspicious cmd.exe or PowerShell activities
            if 'powershell.exe' in stdout.decode().lower() or 'cmd.exe' in stdout.decode().lower():
                logger.warning("Suspicious process detected (PowerShell or CMD)")
    
    except Exception as e:
        logger.error(f"Error running WMI query: {e}")


# Main function
def main():
    logger.info("Starting Fileless Malware Scanner...")

    # Monitor PowerShell activity in Event Logs
    monitor_powershell_activity()

    # Optionally monitor WMI activity every 10 seconds (or adjust as needed)
    while True:
        monitor_wmi_activity()
        time.sleep(10)  # Adjust interval as needed


if __name__ == "__main__":
    main()
